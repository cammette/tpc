<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="parallelProperty"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:parallel.properties" />
		<property name="systemPropertiesMode" value="2" />
	</bean>

	<bean id="putConfigToSystemProperty"
		class="com.travelsky.pcc.reacc.tpc.property.PutConfigToSystemProperty"
		init-method="putCofingToSystemProperty" depends-on="parallelProperty">
		  <property name="propertiesMap">
            <map>
                <entry key="hornetq.file">
                    <value>${hornetq.file}</value>
                </entry>
            </map>
        </property>
	</bean>

	<bean id="EmbeddedJms" class="org.hornetq.integration.spring.SpringJmsBootstrap"
		init-method="start" destroy-method="stop" depends-on="putConfigToSystemProperty">
		<property name="mbeanServer" ref="mbeanServer"></property>
	</bean>
	<bean id="mbeanServer" class="java.lang.management.ManagementFactory"
		factory-method="getPlatformMBeanServer" />

	<bean abstract="true" id="abstractTaskListener"
		class="com.travelsky.pcc.reacc.tpc.AbstractTaskListener">
		<property name="taskContextManager" ref="taskContextManager"></property>
	</bean>

	<bean id="taskListener"
		class="com.travelsky.pcc.reacc.tpc.client.listener.TravelskyParallelDoTaskListener"
		parent="abstractTaskListener">
	</bean>

	<bean id="clientNotify"
		class="com.travelsky.pcc.reacc.tpc.client.listener.TravelskyParallelJoinListener">
	</bean>
	
	<bean id="groupListener"
		class="com.travelsky.pcc.reacc.tpc.TaskGroupListener">
		<property name="notifyClientService" ref="notifyClientService" />
		<property name="replyGroupService" ref="replyGroupService" />
		<property name="taskParallelClientInterface" ref="taskParallelClientInterface" />
	</bean>
	
	<bean id="groupListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="ConnectionFactory" />
		<property name="destination" ref="/queue/taskGroupQueue" />
		<property name="messageListener" ref="groupListener" />
		<property name="sessionTransacted" value="false"></property>
		<property name="concurrentConsumers" value="${executeTaskGroup.threadPool.size}" />
		<property name="maxConcurrentConsumers" value="${executeTaskGroup.threadPool.size}" />
	</bean>

	<bean id="taskListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="ConnectionFactory" />
		<property name="destination" ref="/queue/taskUnitQueue" />
		<property name="messageListener" ref="taskListener" />
		<property name="sessionTransacted" value="true"></property>
		<property name="concurrentConsumers" value="${excuteTask.threadPool.size}" />
		<property name="maxConcurrentConsumers" value="${excuteTask.threadPool.size}" />
	</bean>

	<bean id="clientNotifyListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="ConnectionFactory" />
		<property name="destination" ref="/queue/taskNotifyQueue" />
		<property name="messageListener" ref="clientNotify" />
		<property name="sessionTransacted" value="false"></property>
		<property name="concurrentConsumers" value="${asyNotify.threadPool.size}" />
		<property name="maxConcurrentConsumers" value="${asyNotify.threadPool.size}" />
	</bean>
	
	<bean id="jmsSendAndReplyClientConnectionPool" class="com.travelsky.pcc.reacc.tpc.jms.JmsConnectionPool"
		depends-on="EmbeddedJms" init-method="init" destroy-method="destroy">
		<property name="connectionFactory" ref="ConnectionFactory"></property>
		<property name="maxConnection" value="${send.parellel.size}"></property>
	</bean>

	<bean id="jmsClientNotifyConnectionPool" class="com.travelsky.pcc.reacc.tpc.jms.JmsConnectionPool"
		depends-on="EmbeddedJms" init-method="init" destroy-method="destroy">
		<property name="connectionFactory" ref="ConnectionFactory"></property>
		<property name="maxConnection" value="${reply.parallel.size}"></property>
	</bean>
	
	<bean id="jmsGroupConnectionPool" class="com.travelsky.pcc.reacc.tpc.jms.JmsConnectionPool"
		depends-on="EmbeddedJms" init-method="init" destroy-method="destroy">
		<property name="connectionFactory" ref="ConnectionFactory"></property>
		<property name="maxConnection" value="${jmsGroupConnectionPool.size}"></property>
	</bean>
	
	<bean id="jmsGroupReplyConnectionPool" class="com.travelsky.pcc.reacc.tpc.jms.JmsConnectionPool"
		depends-on="EmbeddedJms" init-method="init" destroy-method="destroy">
		<property name="connectionFactory" ref="ConnectionFactory"></property>
		<property name="maxConnection" value="${jmsGroupReplyConnectionPool.size}"></property>
	</bean>
	
   <bean id="sendAndReplyClientService" class="com.travelsky.pcc.reacc.tpc.jms.JMSService"
		depends-on="EmbeddedJms">
		<property name="queue" ref="/queue/taskUnitQueue" />
		<property name="replyQueue" ref="/queue/taskUnitReplyQueue" />
		<property name="jmsConnectionPool" ref="jmsSendAndReplyClientConnectionPool" />
		<property name="replyJmsConnectionPool" ref="jmsClientNotifyConnectionPool" />
	</bean>

	<bean id="notifyClientService" class="com.travelsky.pcc.reacc.tpc.jms.JMSService"
		depends-on="EmbeddedJms">
		<property name="jmsConnectionPool" ref="jmsClientNotifyConnectionPool" />
		<property name="queue" ref="/queue/taskNotifyQueue" />
	</bean>

	<bean id="replyClientService" class="com.travelsky.pcc.reacc.tpc.jms.JMSService"
		depends-on="EmbeddedJms">
		<property name="queue" ref="/queue/taskUnitReplyQueue" />
		<property name="jmsConnectionPool" ref="jmsSendAndReplyClientConnectionPool" />
	</bean>
	
	<bean id="replyGroupService" class="com.travelsky.pcc.reacc.tpc.jms.JMSService"
		depends-on="EmbeddedJms">
		<property name="queue" ref="/queue/taskGroupReplyQueue" />
		<property name="jmsConnectionPool" ref="jmsGroupReplyConnectionPool" />
	</bean>
	
	<bean id="sendAndReplyGroupService" class="com.travelsky.pcc.reacc.tpc.jms.JMSService"
		depends-on="EmbeddedJms">
		<property name="queue" ref="/queue/taskGroupQueue" />
		<property name="replyQueue" ref="/queue/taskGroupReplyQueue" />
		<property name="jmsConnectionPool" ref="jmsGroupConnectionPool" />
		<property name="replyJmsConnectionPool" ref="jmsGroupReplyConnectionPool" />
	</bean>
	
	<bean id="taskContextManager"
		class="com.travelsky.pcc.reacc.tpc.status.DefaultTaskContextManager"
		init-method="init">
	</bean>

	<bean id="MonitorBatchTask" class="com.travelsky.pcc.reacc.tpc.status.TaskMonitor"
		init-method="init" destroy-method="destroy" depends-on="taskContextManager">
		<property name="replyClientService" ref="replyClientService" />
		<property name="taskContextManager" ref="taskContextManager" />
		<property name="interval" value="${taskMonitor.interval}"></property>
	</bean>

	<bean id="taskParallelClientInterface" class="com.travelsky.pcc.reacc.tpc.client.TaskParallelClient">
		<property name="sendAndReplyClientService" ref="sendAndReplyClientService" />
		<property name="taskContextManager" ref="taskContextManager" />
	</bean>
	
	<bean id="taskGroupParallelClientInterface" class="com.travelsky.pcc.reacc.tpc.client.TaskGroupParallelClient">
		<property name="sendAndReplyGroupService" ref="sendAndReplyGroupService" />
	</bean>
	
	<bean id="travelskyParallelComputingTemplate"
		class="com.travelsky.pcc.reacc.tpc.client.TravelskyParallelComputingTemplate" abstract="true">
		<property name="taskGroupParallelClientInterface" ref="taskGroupParallelClientInterface"/>
	</bean>


</beans>
    